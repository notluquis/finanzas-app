.fc {
  --calendar-event-bg-default: rgba(148, 163, 184, 0.18);
  --calendar-event-bg-subcutaneous: rgba(30, 64, 175, 0.18);
  --calendar-event-bg-test: rgba(244, 114, 182, 0.18);
}

.calendar-event--default {
  background-color: var(--calendar-event-bg-default) !important;
  border-color: rgba(148, 163, 184, 0.4) !important;
}

.calendar-event--subcutaneous {
  background-color: var(--calendar-event-bg-subcutaneous) !important;
  border-color: rgba(30, 64, 175, 0.4) !important;
}

.calendar-event--test {
  background-color: rgba(244, 114, 182, 0.18) !important;
  border-color: rgba(244, 114, 182, 0.45) !important;
}

.fc-timegrid-event {
  border-radius: 14px !important;
  padding: 0 !important;
  overflow: hidden !important;
}

.fc-timegrid-event .fc-event-main {
  padding: 6px 8px !important;
  white-space: normal !important;
  display: flex !important;
  align-items: flex-start !important;
  justify-content: flex-start !important;
  font-size: 11px !important;
  line-height: 1.25 !important;
}

.fc-timegrid-event .fc-event-main-frame {
  /* Don't force 100% width here â€” FullCalendar positions event frames absolutely
     to avoid overlaps. Forcing full width breaks the layout and causes events
     to overlap. Keep natural sizing and let FullCalendar compute widths. */
  max-width: 100% !important;
}

.fc-timegrid-event .fc-event-main > div {
  /* Allow the inner content to size naturally. Removing forced width prevents
     different events from stacking on top of each other when FullCalendar
     calculates side-by-side positions. */
  width: auto !important;
}

.fc-timegrid-event:hover {
  box-shadow: 0 12px 28px -24px rgba(15, 23, 42, 0.5);
}

.calendar-loading {
  cursor: progress !important;
}
